---
version: 2.1

orbs:
  slack: circleci/slack@4.1.3

executors:
  pre-commit-executor:
    docker:
      - image: quay.io/astronomer/ci-pre-commit:2022-08
        environment:
          TFENV_AUTO_INSTALL: true
  terraform-executor:
    docker:
      - image: quay.io/astronomer/ci-terraform:2022-08
        environment:
          TFENV_AUTO_INSTALL: true

workflows:
  pre-commit:
    jobs:
      - run_pre_commit
  terraform_pipeline:
    jobs:
      - terraform-apply:
          region: us-east4
          project_id: astronomer-cloud-dev-236021
          tf_state_bucket: cloud2-dev-terraform
          zonal: true
          context:
            - gcp-dev
      - terraform-destroy:
          region: us-east4
          project_id: astronomer-cloud-dev-236021
          tf_state_bucket: cloud2-dev-terraform
          zonal: true
          context:
            - gcp-dev
          requires:
            - terraform-apply

jobs:
  run_pre_commit:
    executor: pre-commit-executor
    resource_class: small
    steps:
      - checkout
      - pre-commit-commands

  terraform-apply:
    executor: terraform-executor
    resource_class: medium
    parameters:
      region:
        type: string
      project_id:
        type: string
      tf_state_bucket:
        type: string
      zonal:
        type: boolean
    steps:
      - checkout
      - terraform-install
      - run:
          name: Provision GCloud Credentials
          command: |
            echo "$GCP_TOKEN" > /tmp/account.json
            echo 'export GOOGLE_APPLICATION_CREDENTIALS=/tmp/account.json' >>"$BASH_ENV"
            source "$BASH_ENV"
      - run:
          name: Run Terraform Apply
          command: |
            DEPLOYMENT_ID=ci$(echo "${CIRCLE_PROJECT_REPONAME}${CIRCLE_WORKFLOW_ID}" | md5sum | awk '{print substr($1,0,5)}')
            make init apply-auto-approve PROJECT_ID=<< parameters.project_id >> REGION=<< parameters.region >> DEPLOYMENT_ID=$DEPLOYMENT_ID ZONAL=<< parameters.zonal >> TF_STATE_BUCKET=<< parameters.tf_state_bucket >>
      - run:
          name: Run Terraform Destroy
          command: |
            DEPLOYMENT_ID=ci$(echo "${CIRCLE_PROJECT_REPONAME}${CIRCLE_WORKFLOW_ID}" | md5sum | awk '{print substr($1,0,5)}')
            make init destroy-auto-approve PROJECT_ID=<< parameters.project_id >> REGION=<< parameters.region >> DEPLOYMENT_ID=$DEPLOYMENT_ID ZONAL=<< parameters.zonal >> TF_STATE_BUCKET=<< parameters.tf_state_bucket >>
          when: on_fail

  terraform-destroy:
    executor: terraform-executor
    resource_class: medium
    parameters:
      region:
        type: string
      project_id:
        type: string
      tf_state_bucket:
        type: string
      zonal:
        type: boolean
    steps:
      - checkout
      - terraform-install
      - run:
          name: Provision GCloud Credentials
          command: |
            echo "$GCP_TOKEN" > /tmp/account.json
            echo 'export GOOGLE_APPLICATION_CREDENTIALS=/tmp/account.json' >>"$BASH_ENV"
            source "$BASH_ENV"
      - run:
          name: Run Terraform Destroy
          command: |
            DEPLOYMENT_ID=ci$(echo "${CIRCLE_PROJECT_REPONAME}${CIRCLE_WORKFLOW_ID}" | md5sum | awk '{print substr($1,0,5)}')
            make init destroy-auto-approve PROJECT_ID=<< parameters.project_id >> REGION=<< parameters.region >> DEPLOYMENT_ID=$DEPLOYMENT_ID ZONAL=<< parameters.zonal >> TF_STATE_BUCKET=<< parameters.tf_state_bucket >>

commands:
  pre-commit-commands:
    description: "Execute the pre-commit"
    steps:
      - run:
          name: Create pre-commit-cache-key.txt
          command: |
            cp .pre-commit-config.yaml /tmp/pre-commit-cache-key.txt
            python --version --version | sed 's/^/# /' >> /tmp/pre-commit-cache-key.txt
      - restore_cache:
          keys:
            - pre-commit-cache-{{ checksum "/tmp/pre-commit-cache-key.txt" }}
      - terraform-install
      - run:
          name: Install terraform-docs
          command: go install github.com/terraform-docs/terraform-docs@v0.16.0
      - run:
          name: Install pre-commit hooks
          command: pre-commit install-hooks
      - save_cache:
          key: pre-commit-cache-{{ checksum "/tmp/pre-commit-cache-key.txt" }}
          paths:
            - ~/.cache/pre-commit
      - run:
          name: Run pre-commit
          command: |
            pre-commit run --all-files --show-diff-on-failure

  terraform-install:
    steps:
      - run:
          name: Install terraform
          command: |
            tfenv install
            tfenv use
